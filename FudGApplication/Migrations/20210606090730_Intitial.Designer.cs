// <auto-generated />
using System;
using FudGApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FudGApplication.Migrations
{
    [DbContext(typeof(DbModel))]
    [Migration("20210606090730_Intitial")]
    partial class Intitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FudGApplication.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("FoodId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("FudGApplication.Models.CustomerRestaurentFoodBridge", b =>
                {
                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurentId")
                        .HasColumnType("int");

                    b.HasKey("FoodId", "CustomerId", "RestaurentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurentId");

                    b.ToTable("customerRestaurentFoodBridges");
                });

            modelBuilder.Entity("FudGApplication.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FoodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FoodPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FoodTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("FudGApplication.Models.Restaurent", b =>
                {
                    b.Property<int>("RestaurentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurentId");

                    b.HasIndex("FoodId");

                    b.ToTable("Restaurent");
                });

            modelBuilder.Entity("FudGApplication.Models.Customer", b =>
                {
                    b.HasOne("FudGApplication.Models.Food", null)
                        .WithMany("Cutomers")
                        .HasForeignKey("FoodId");
                });

            modelBuilder.Entity("FudGApplication.Models.CustomerRestaurentFoodBridge", b =>
                {
                    b.HasOne("FudGApplication.Models.Customer", "Customer")
                        .WithMany("CustomerRestaurentFoodBridges")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FudGApplication.Models.Food", "Food")
                        .WithMany("CustomerRestaurentFoodBridges")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FudGApplication.Models.Restaurent", "Restaurent")
                        .WithMany("CustomerRestaurentFoodBridges")
                        .HasForeignKey("RestaurentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Food");

                    b.Navigation("Restaurent");
                });

            modelBuilder.Entity("FudGApplication.Models.Restaurent", b =>
                {
                    b.HasOne("FudGApplication.Models.Food", null)
                        .WithMany("Restaurents")
                        .HasForeignKey("FoodId");
                });

            modelBuilder.Entity("FudGApplication.Models.Customer", b =>
                {
                    b.Navigation("CustomerRestaurentFoodBridges");
                });

            modelBuilder.Entity("FudGApplication.Models.Food", b =>
                {
                    b.Navigation("CustomerRestaurentFoodBridges");

                    b.Navigation("Cutomers");

                    b.Navigation("Restaurents");
                });

            modelBuilder.Entity("FudGApplication.Models.Restaurent", b =>
                {
                    b.Navigation("CustomerRestaurentFoodBridges");
                });
#pragma warning restore 612, 618
        }
    }
}
